name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    env:
      BASH_ENV: "~/.bashrc"

    steps:
    - uses: actions/checkout@v4
        
    - name: Install Ubuntu requirements
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt -y install autoconf automake bison flex gcc g++ libelf-dev make texinfo libncurses5-dev patch python2-dev subversion wget zlib1g-dev libtool-bin python-dev-is-python3 bzip2 libgmp3-dev pkg-config libssl-dev
    
    - name: Install macOS requirements
      if: matrix.os == 'macos-latest'
      # act -P macos-latest=-self-hosted --container-architecture linux/amd64
      run: |
        brew update
        brew install autoconf automake openssl libelf ncurses zlib gmp wget pkg-config gnu-sed texinfo
        echo "alias sed='gsed'" >> ~/.bashrc

        # check current version
        python --version
        #python-config --libs
        
        # install pyenv
        brew install pyenv
        # Initialize pyenv in the current shell
        eval "$(pyenv init --path)"

        # Install Python 3.11 using pyenv
        pyenv install 3.11.0
        # Set Python 3.11 as the global version
        pyenv global 3.11.0
        pip install python-config
        echo 'pyenv global 3.11.0' >> ~/.bashrc

    - name: Runs all the stages in the shell
      run: |
        mkdir -p $PWD/ps3dev
        export PS3DEV=$PWD/ps3dev
        export PSL1GHT=$PS3DEV
        export PATH=$PATH:$PS3DEV/bin
        export PATH=$PATH:$PS3DEV/ppu/bin
        export PATH=$PATH:$PS3DEV/spu/bin
        ./toolchain.sh

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
    
    - name: Compress ps3dev folder
      run: |
        tar -zcvf ps3dev.tar.gz ps3dev

#    - uses: actions/upload-artifact@v2
#      with:
#        name: ps3dev-${{ steps.slug.outputs.sha8 }}-${{matrix.os}}
#        path: ps3dev.tar.gz

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Get current arch
      id: arch
      run: echo "::set-output name=arch::$(uname -m)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{matrix.os}}-${{ steps.slug.outputs.sha8 }}
        release_name: ps3dev ${{matrix.os}} ${{steps.arch.outputs.arch}} (${{steps.date.outputs.date}})
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ps3dev.tar.gz
        asset_name: ps3dev-${{matrix.os}}-${{steps.arch.outputs.arch}}-${{steps.date.outputs.date}}.tar.gz
        asset_content_type: application/gzip